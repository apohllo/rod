0.7.1
- #189 guard object load against empty strings.
- Don't close hash index when it is destroyed.
- #188 don't raise exception when HashIndex closed
- Make the HashIndex exceptions more informative.
- #187 collection proxy is cleared in assignment
- Tiny change of diagnostic messages
- #174 progress for fields migration
- #181 store only added/updated hash index pairs
- #180 save collections in index no in Abstract DB
- #179 raise exception during iteration
- Fix saving of empty collection proxy.
- #176 copy index file if its type is the same
- #168 copy unmodified classes during migration
- #166 true index type still supported
- #171 encode strings to utf-8 when searching in hash index
- #170 fix save for hash index
- #169 missing each implementation in hash index
- #167 copy special classes data to backup
- #165 fix invalid topological class sorting algorithm
- #164 invalid variable in load metadata
0.7.0
- #142 migrate indices during model migration
- #134 Berkeley DB Hash for indexing properties
- #137 move #special_class? to AbstractDatabase
- #138 move development_mode accessor to AbstractDatabase
- #136 use (DB) #opened? instead of @handler.nil?
0.6.3
- #94 indexing of unstored object in plural assoc
- #128 incompatible schema message is more specific
- #129 check properties order
- #131 check for missing classes
- #72 update of objects' state
- #117 get rid of signed/unsigned comparison warning
- #135 refactoring of indexes
- #140 remove key argument from AbstractDatabase#read_index
- #149 CollectionProxy insert, delete, delete_at
- #154 fix configuration of mocha for cucumber
- #153 fix: field values doesn't match
- #153 111122223333 is too big for ulong on 32bit systems
- #18 use latest RubyInline and fix 'require on ... failed'
- #152 travis-ci configuration: ruby 1.9.2
- #151 missing rake dependency
- #130 fix: canonicalize path
- #124 implement empty? for CollectionProxy
0.6.2
- #127 default implementation of inspect
- #123 fix: warning on has_rdoc in gemspec
- #116 missing tmp directory for a fresh project
- Slightly complicate the append feature
- #120 fix: removal of database so file
- #119 fix: segfault when accessing fresh object's properties
- Some clean-up of gemspec
- #118 fix: ISO C90 forbids mixed declarations and code
- Fix gemspec - only year-moth-day is preserved
- Update cuke to 1.0 & change README to rdoc
- #115 fix: UINT -> ULONG
- #114 fix: encoding of marshalled values
0.6.1
- Change order of tests in all_tests
- Update DB 'created_at' if empty
- #112 fix: indices are rewritten during migration
- #110 bulk allocate for objects durign migration
- #111 back-up of database.yml during migration
- Fix: uninitilized module name
- Make incompatible model version message more inteligible
- Make index rewrite/convert option more meaningful
- #108 fix: indices are destroyed for read/write mode
- #81 automatic schema transformation
- #104 remove ruby inline generated files when model is generated
- tests/read_on_create.rb remove ruby inline and data files during creation
- #100 fix: removal of RubyInline generated files
- #43 generate classes from metadata
- #43 generate classes without module embedding
-  #96 fix: find_by for assocs
- #95 remove weak_hash dependency
- #25 check compatibility of class structure
- #87 store supreclass of a class in metadata
- #26 check version of library: fix revision check - Add ~@ignore tag as default for specs
- #93 fix: storage of has_many appended objects - Turn on full object referential integrity
- #65 store DB creation and update time in metadata
- #89 Replace SimpleWeakHash with Cache
- #90 Remove blocks from collection proxy
- #80 tests and proper fix for segfault on _allocate_polymorphic
- Add check for index of already stored object
- #73 append of has many relationship
- #82 index (flat -> segmented) transformation tool
- #86 Cache indexed properties (optimiz.)
- Remove legacy examples
- #80 sefault on _allocate_polymorphic_join_elements
- #79 fix: reading indices during DB creation causes an error
0.6.0
- #64 index for associations
- Update legacy test to new API
- #26 check version of Rod library agains file version
- #1 initialization form hash (ActiveRecord style)
- #68 the indexed objects are stored in a collection proxy and are laizly fetched
- #9 has_many is lazy
  no referenced element representation is created, utill the element is accessed
- #69 fix inheritence and polymorphic associations
- Refactoring (API change): change all internal calls to pass rod_id instead of position
- #46 Store only rod_id and class_id for referenced objects
- #66 after storing an object, clear it singular and plural associations to allow later garbage collection
- #57 better implementation of struct_name
- #61 excessive Symbol#to_s calls removal
- #61 excessive String#to_sym calls removal
- #58 compact implementation of update_plural
- #41 structs associated with the object is not wrapped into another object
- Tests for #56
- #55 associated object is fetched from DB, even though it is present
- Change Willma to Wilma in tests
- #52 load bucket for segmented index during DB creation
- Don't delete old buckets when the DB is closed
- Fix: load bucket when the segmented index is created
- #59 Change WeakHash to SimpleWeakHash
- #54 don't relay on Ruby#hash in implementation of segmented index
- #53 Remove segmented index files when the DB is created
0.5.5
- segmented index #31
- don't cache objects when they are stored in the DB #19
- #33 pre-allocate larger data segments
- #42 storage of index in regular file
- #23 change all runtime exceptions to RodExceptions
- Chagne page_size variable to page_size call
- #4 append of database (experimental)
- Refactor index read and write #42
- Add guards for read-only data
- #39 remove page count from metadata
- #38 invalid size for munmap when closing DB
- #35 - meta-data is stored in yaml
0.5.4
- default implementation of to_s
- DB data is stored in a DB, not a single file #36 #37
- removal of legacy tests
- index flushing when the DB is created
0.5.3
- implementation of field serialization
- refactoring of field storage
- implementation of enumerator and enumerable
0.5.2
- polymorphic associations
- fix C code: change INT2NUM to UINT2NUM for unsigned values
- make index scope error for model more descriptive
- features for nil associations
- store version of the library in Ruby code
- make Rakefile more useful
- rod.rb explicitly enumerates the required files
0.5.1
- force ActiveSupport::Dependencis to use regular require
- fix initialization of models with indices
- add more info for basic feature
0.5.0
- simultaneous usage of many databases
- refactoring of service and model
- remove page from string C definition
- remove index packign/unpacking
- inheritence of attributes and associations
- features for all basic functions
0.4.4
- minor fix: count objects while storing
- remove separate zero-string tests
- Fred feature uses model step definitions
- model step definitions refactoring
- remove Ruby inline generated files during tests
0.4.3
- some test changed into features specification
- default implementation of == for Model
- scope check for []
- allow for purging subclass information when closing database
- cache clearing
- unsued C methods are generated only in development mode
- updated dependencies
0.4.2
- clear Gemfile
- make clear statements about dev. dependencies
0.4.1
- allow to skip validation
- tests updated for Ruby 1.9.2
- Gemfile added
0.4.0
- page offset removed from string information (merged with string)
- cache clearing turned off
0.3.1
- build_structure is called when the DB is created/opened
- change message when not all objects are stored: only the number of objects
- when the DB is closed only the number of not stored objects is reported
0.3.0
- data is stored in separated files during creation
0.2.0
- uses ActiveModel for validation
